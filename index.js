// Generated by CoffeeScript 2.0.0
(function() {
  var http, myIP, needle, request;

  myIP = require('my-ip');

  http = require('http');

  needle = require('needle');

  request = require('request');

  exports.getPublicIp = function(o, cb) {
    return needle.get('http://myexternalip.com/raw', function(e, r) {
      if (!e && r.statusCode === 200) {
        return cb(null, r.body);
      } else {
        return cb(null, 'unknown');
      }
    });
  };

  exports.getPrivateIp = function(o, cb) {
    var e, ip;
    try {
      ip = myIP();
      return cb(null, ip);
    } catch (error) {
      e = error;
      return cb(null, 'unknown');
    }
  };

  exports.getPublicIp2 = function(o, cb) {
    var html;
    // not working, dropped
    html = "";
    return needle.get("https://whatismyipaddress.com", options).on('readable', function() {
      var data, results;
      results = [];
      while (data = this.read()) {
        results.push(html += data.toString());
      }
      return results;
    }).on('done', function(e) {
      var e2, ip;
      if (!e) {
        try {
          ip = 'unknown';
          //console.log html
          //dom=new jsdom.JSDOM html
          //ip=dom.window.document.getElementById("ipv4")
          //console.log ip.innerHTML
          return cb(null, ip);
        } catch (error) {
          e2 = error;
          console.log(e2.message);
          return cb(null, 'unknown');
        }
      } else {
        console.log(e.message);
        return cb(null, 'unknown');
      }
    });
  };

  exports.getPublicIp3 = function(o, cb) {
    var requestData;
    requestData = {
      followAllRedirects: true,
      url: 'http://api.ipfy.org'
    };
    return request(requestData, function(e, r, b) {
      if (!e) {
        console.log(b);
        return cb(null, b);
      } else {
        console.log(e.message);
        return cb(null, 'unknown');
      }
    });
  };

  exports.getPublicIp4 = function(o, cb) {
    var options;
    options = {
      json: true
    };
    return needle.get('https://api.ipregistry.co/?key=tryout', options, function(e, r) {
      if (!e && r.statusCode === 200) {
        //console.log r.body.ip
        return cb(null, r.body.ip);
      } else {
        //console.log e.message
        return cb(null, 'unknown');
      }
    });
  };

  exports.getPublicIp5 = function(o, cb) {
    return needle.get('https://api.seeip.org/jsonip?', function(e, r) {
      if (!e && r.statusCode === 200) {
        //console.log r.body.ip
        return cb(null, r.body.ip);
      } else {
        return cb(null, 'unknown');
      }
    });
  };

}).call(this);

//# sourceMappingURL=index.js.map
